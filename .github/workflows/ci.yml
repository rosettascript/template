name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: template_db_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: |
        npm ci
        cd server && npm ci
        cd ../client && npm ci
    
    - name: Lint code
      run: |
        npm run lint
    
    - name: Type check
      run: |
        npm run type-check
    
    - name: Format check
      run: |
        npm run format:check
    
    - name: Run server tests
      run: |
        cd server && npm test
      env:
        NODE_ENV: test
        PG_HOST: localhost
        PG_PORT: 5432
        PG_DATABASE: template_db_test
        PG_USER: postgres
        PG_PASSWORD: postgres
        PG_SSL: false
        JWT_SECRET: test-secret
        REDIS_HOST: localhost
        REDIS_PORT: 6379
    
    - name: Run client tests
      run: |
        cd client && npm test
    
    - name: Build applications
      run: |
        npm run build
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        files: ./server/coverage/lcov.info,./client/coverage/lcov.info
        fail_ci_if_error: true

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        npm audit --audit-level moderate
        cd server && npm audit --audit-level moderate
        cd ../client && npm audit --audit-level moderate
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high

  deploy:
    needs: [test, security]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploying to production..."
        # Add your deployment commands here